/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
// Declares that the remove class is part of the "rms" package
package rms; 
// Importing necessary Java SQL and Swing components
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * JFrame class for managing staff information.
 * @author abdul
 */
public class staff extends javax.swing.JFrame {
 Connection con=null;  // Database connection object
PreparedStatement pst= null;   // Prepared statement for executing SQL queries
ResultSet rs= null;  // Result set for storing the results of SQL queries
Statement st= null;  // Statement object for executing SQL queries
    /**
     * Creates new form staff
     */
    public staff() {
        initComponents(); // Initializing the GUI components
         con = RestaurantDBConnection.connectRestaurantDB();   // Establishing a database connection
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        viewlist = new javax.swing.JButton();
        addemployee = new javax.swing.JButton();
        editlist = new javax.swing.JButton();
        removeemployee = new javax.swing.JButton();
        IDsearch = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        home2.setFont(new java.awt.Font("Vivaldi", 3, 18)); // NOI18N
        home2.setText("Home");
        home2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home2ActionPerformed(evt);
            }
        });
        getContentPane().add(home2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "staffID", "name", "surname", "email", "salary", "workShift", "phoneNo"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 910, 420));

        viewlist.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        viewlist.setText("View List");
        viewlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewlistActionPerformed(evt);
            }
        });
        getContentPane().add(viewlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 200, 80));

        addemployee.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        addemployee.setText("Add Employee");
        addemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addemployeeActionPerformed(evt);
            }
        });
        getContentPane().add(addemployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, 200, 80));

        editlist.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        editlist.setText("Edit List");
        editlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editlistActionPerformed(evt);
            }
        });
        getContentPane().add(editlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, 200, 80));

        removeemployee.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        removeemployee.setText("Remove Employee");
        removeemployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeemployeeActionPerformed(evt);
            }
        });
        getContentPane().add(removeemployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, 240, 80));

        IDsearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDsearch.setText("enter staff ID");
        IDsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDsearchActionPerformed(evt);
            }
        });
        getContentPane().add(IDsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 240, 40));

        search.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 100, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backGround.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewlistActionPerformed
        // View the list of staff members: 
           try{
            String sql = "SELECT* FROM staff;";
           st= con.createStatement();
rs = st.executeQuery(sql);
while (rs.next()){
    // Retrieve staff information from the database
    String staffID= rs.getString("staffID");
    String name= rs.getString("name");
    String surname = rs.getString("surname");
    String email = rs.getString("email");
    String salary= rs.getString("salary");
    String workShift= rs.getString("workShift");
    String phoneNo= rs.getString("phoneNo");
     // Add staff information to the table
    String Rtable[]= {staffID, name, surname, email, salary, workShift, phoneNo};
    DefaultTableModel tmodel= (DefaultTableModel) jTable2.getModel();
    tmodel.addRow(Rtable); 
}
// Close the connection
con.close();
            }
     
        
        catch(Exception e)
                {  
                    // Exception handling
        }
        
    }//GEN-LAST:event_viewlistActionPerformed

    private void addemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addemployeeActionPerformed
      // Open the add employee window:
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addemployee().setVisible(true);
            }
        });
    }//GEN-LAST:event_addemployeeActionPerformed

    private void editlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editlistActionPerformed
         // Open the edit list window:
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editlist().setVisible(true);
            }
        });
    }//GEN-LAST:event_editlistActionPerformed

    private void removeemployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeemployeeActionPerformed
         // Open the remove employee window:
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new removeemployee().setVisible(true);
            }
        });
         
    }//GEN-LAST:event_removeemployeeActionPerformed

    private void home2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home2ActionPerformed
         // Navigate to the home page:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepage().setVisible(true);
            }
        });
    }//GEN-LAST:event_home2ActionPerformed

    private void IDsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDsearchActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
         // This method handles the search action performed by the user                                     
    try {
        // Check and reinitialize connection if needed
        if (con == null || con.isClosed()) {
            con = RestaurantDBConnection.connectRestaurantDB();
        }
         // SQL query to retrieve staff information based on staffID
        String sql = "SELECT * FROM staff WHERE staffID = ?;";
        pst = con.prepareStatement(sql); // Prepare the SQL statement
        pst.setString(1, IDsearch.getText());   // Set the parameter value for the staffID
        rs = pst.executeQuery();  // Execute the query and store the result
        
        String record = ""; // Variable to hold the retrieved record
        while (rs.next()) { // Iterate through the result set
              // Retrieve staff information from the result set
            String staffID = rs.getString("staffID");
            String name = rs.getString("name");
            String surname = rs.getString("surname");
            String email = rs.getString("email");
            String salary = rs.getString("salary");
            String workShift = rs.getString("workShift");
            String phoneNo = rs.getString("phoneNo");
            record = staffID + " " + name + " " + surname + " " + email + " " + salary + " " + workShift + " " + phoneNo ;
        }
        // Check if a record was found: 
        if (record.isEmpty()) {
             // If no record was found, display a message:
            JOptionPane.showMessageDialog(null, "Record not Found");
        } else {
              // If a record was found, display the record:
            JOptionPane.showMessageDialog(null, record);
        }
        
        // Close resources after the search
        rs.close();
        pst.close();
        
    } catch (Exception e) {
         // Exception handling in case of errors
        JOptionPane.showMessageDialog(null, "Error occurred: " + e.getMessage());
    }


        
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDsearch;
    private javax.swing.JButton addemployee;
    private javax.swing.JButton editlist;
    private javax.swing.JButton home2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton removeemployee;
    private javax.swing.JButton search;
    private javax.swing.JButton viewlist;
    // End of variables declaration//GEN-END:variables
}
